{"version":3,"sources":["Components/imageGallery/imageGalleryItem/ImagesGalleryItemStyled.js","Components/modal/ModalStyled.js","Components/modal/Modal.jsx","Components/imageGallery/imageGalleryItem/ImagesGalleryItem.jsx","Components/api/ApiGetData.js","Components/imageGallery/ImagesGalleryStyled.js","Components/searchbar/SearchbarStyled.js","Components/searchbar/Searchbar.jsx","Components/button/ButtonStyled.js","Components/button/Button.jsx","Components/imageGallery/ImageGallery.jsx","Components/App.jsx","index.js"],"names":["ImagesGalleryItemStyled","styled","li","ModalStyled","div","Modal","isModalOpen","alt","image","useEffect","document","addEventListener","escapePress","e","key","modalClose","removeEventListener","onClick","onKeyPress","className","src","ImagesGalleryItem","item","imageOnLoad","useState","modalIsOpen","setModalIsOpen","target","currentTarget","prev","webformatURL","tags","onLoad","largeImageURL","ApiGetData","input","a","page","inputPerPage","axios","get","process","then","data","hits","res","alert","console","log","ImagesGalleryStyled","ul","SearchbarStyled","header","Searchbar","setSearch","searchInput","setSearchInput","onSubmit","preventDefault","type","autoComplete","autoFocus","placeholder","onChange","value","ButtonStyled","Button","setPage","spinner","color","height","width","ImageGallery","setData","setSpinner","imagesLoaded","setImagesLoaded","imagesPerPage","search","imageSetToZero","window","scrollTo","top","documentElement","scrollHeight","behavior","map","id","length","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.02d140e5.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const ImagesGalleryItemStyled = styled.li`\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n\r\n  .ImageGalleryItem-image {\r\n    width: 100%;\r\n    height: 260px;\r\n    object-fit: cover;\r\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  }\r\n\r\n  .ImageGalleryItem-image:hover {\r\n    transform: scale(1.03);\r\n    cursor: zoom-in;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const ModalStyled = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1200;\r\n\r\n  .Modal {\r\n    max-width: calc(100vw - 48px);\r\n    max-height: calc(100vh - 24px);\r\n  }\r\n`;\r\n","import { useEffect } from 'react';\r\nimport { ModalStyled } from './ModalStyled';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Modal = ({ isModalOpen, alt, image }) => {\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', escapePress);\r\n  }, []);\r\n\r\n  const escapePress = (e) => {\r\n    if (e.key === 'Escape') {\r\n      modalClose(e);\r\n    }\r\n  };\r\n\r\n  const modalClose = (e) => {\r\n    isModalOpen(e);\r\n    document.removeEventListener('keydown', escapePress);\r\n  };\r\n\r\n  return (\r\n    <ModalStyled onClick={modalClose} onKeyPress={escapePress}>\r\n      <div className=\"Modal\">\r\n        <img src={image} alt={alt} />\r\n      </div>\r\n    </ModalStyled>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n\r\nModal.propTypes = {\r\n  isModalOpen: PropTypes.func,\r\n  image: PropTypes.string,\r\n  alt: PropTypes.string,\r\n};\r\n","import { useState } from 'react';\r\nimport { ImagesGalleryItemStyled } from './ImagesGalleryItemStyled';\r\nimport Modal from '../../modal/Modal';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImagesGalleryItem = ({ item, imageOnLoad }) => {\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n  const isModalOpen = (e) => {\r\n    if (e.target === e.currentTarget || e.key === 'Escape')\r\n      setModalIsOpen((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ImagesGalleryItemStyled>\r\n        <img\r\n          src={item.webformatURL}\r\n          alt={item.tags}\r\n          className=\"ImageGalleryItem-image\"\r\n          onLoad={imageOnLoad}\r\n          onClick={isModalOpen}\r\n        />\r\n      </ImagesGalleryItemStyled>\r\n      {modalIsOpen ? (\r\n        <Modal\r\n          image={item.largeImageURL}\r\n          alt={item.tags}\r\n          isModalOpen={isModalOpen}\r\n        />\r\n      ) : (\r\n        ''\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImagesGalleryItem;\r\n\r\nImagesGalleryItem.propTypes = {\r\n  item: PropTypes.object,\r\n  imageOnLoad: PropTypes.func,\r\n};\r\n","import axios from 'axios';\r\n\r\nexport const ApiGetData = async (input, page = 1, inputPerPage = 15) => {\r\n  try {\r\n    const res = await axios\r\n      .get(\r\n        `https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=${input}&page=${page}&per_page=${inputPerPage}&key=${process.env.REACT_APP_PIXYBUY_KEY}`\r\n      )\r\n      .then((data) => data.data.hits);\r\n    return res;\r\n  } catch (error) {\r\n    alert('Bad request');\r\n    console.log(error);\r\n  }\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const ImagesGalleryStyled = styled.ul`\r\n  display: grid;\r\n  max-width: calc(100vw - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  grid-gap: 16px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const SearchbarStyled = styled.header`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n  .SearchForm {\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    max-width: 600px;\r\n    background-color: #fff;\r\n    border-radius: 3px;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .SearchForm-button {\r\n    display: inline-block;\r\n    width: 48px;\r\n    height: 48px;\r\n    border: 0;\r\n    background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\r\n    background-size: 40%;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    opacity: 0.6;\r\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n    cursor: pointer;\r\n    outline: none;\r\n  }\r\n\r\n  .SearchForm-button:hover {\r\n    opacity: 1;\r\n  }\r\n\r\n  .SearchForm-button-label {\r\n    position: absolute;\r\n    width: 1px;\r\n    height: 1px;\r\n    padding: 0;\r\n    overflow: hidden;\r\n    clip: rect(0, 0, 0, 0);\r\n    white-space: nowrap;\r\n    clip-path: inset(50%);\r\n    border: 0;\r\n  }\r\n\r\n  .SearchForm-input {\r\n    display: inline-block;\r\n    width: 100%;\r\n    font: inherit;\r\n    font-size: 20px;\r\n    border: none;\r\n    outline: none;\r\n    padding-left: 4px;\r\n    padding-right: 4px;\r\n  }\r\n\r\n  .SearchForm-input::placeholder {\r\n    font: inherit;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n","import { useState } from 'react';\r\nimport { SearchbarStyled } from './SearchbarStyled';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Searchbar = ({ setSearch }) => {\r\n  const [searchInput, setSearchInput] = useState('');\r\n\r\n  const onHandleChange = (e) => {\r\n    setSearchInput(e.target.value);\r\n  };\r\n\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    setSearch(searchInput);\r\n  };\r\n\r\n  return (\r\n    <SearchbarStyled>\r\n      <form className=\"SearchForm\" onSubmit={onFormSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={onHandleChange}\r\n        />\r\n      </form>\r\n    </SearchbarStyled>\r\n  );\r\n};\r\n\r\nexport default Searchbar;\r\n\r\nSearchbar.propTypes = {\r\n  setSearch: PropTypes.func,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const ButtonStyled = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  .Button {\r\n    padding: 8px 16px;\r\n    border-radius: 2px;\r\n    background-color: #3f51b5;\r\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n    text-align: center;\r\n    display: inline-block;\r\n    color: #fff;\r\n    border: 0;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n    font-family: inherit;\r\n    font-size: 18px;\r\n    line-height: 24px;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    min-width: 180px;\r\n    margin-top: 10px;\r\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n      0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n  }\r\n  .Button:hover,\r\n  .Button:focus {\r\n    background-color: #303f9f;\r\n  }\r\n`;\r\n","import { ButtonStyled } from './ButtonStyled';\r\nimport Loader from 'react-loader-spinner';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ setPage, spinner }) => {\r\n  return (\r\n    <ButtonStyled>\r\n      {spinner ? (\r\n        <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\r\n      ) : (\r\n        <button className=\"Button\" type=\"button\" onClick={setPage}>\r\n          Load more\r\n        </button>\r\n      )}\r\n    </ButtonStyled>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  setPage: PropTypes.func,\r\n  spinner: PropTypes.bool,\r\n};\r\n","import ImagesGalleryItem from './imageGalleryItem/ImagesGalleryItem';\r\nimport { ApiGetData } from '../api/ApiGetData';\r\nimport { useState, useEffect } from 'react';\r\nimport { ImagesGalleryStyled } from './ImagesGalleryStyled';\r\nimport Searchbar from '../searchbar/Searchbar';\r\nimport Button from '../button/Button';\r\n\r\nconst ImageGallery = () => {\r\n  const [data, setData] = useState([]);\r\n  const [searchInput, setSearchInput] = useState('');\r\n  const [page, setPage] = useState(1);\r\n  const [spinner, setSpinner] = useState(false);\r\n  const [imagesLoaded, setImagesLoaded] = useState(0);\r\n  const [imagesPerPage] = useState(15);\r\n\r\n  useEffect(() => {\r\n    if (searchInput === '') return false;\r\n    search(page, imagesPerPage);\r\n    setData([]);\r\n    imageSetToZero();\r\n  }, [searchInput]);\r\n\r\n  useEffect(() => {\r\n    if (page !== 1) {\r\n      search(page, imagesPerPage);\r\n      imageSetToZero();\r\n    }\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    if (imagesLoaded === imagesPerPage) {\r\n      window.scrollTo({\r\n        top: document.documentElement.scrollHeight,\r\n        behavior: 'smooth',\r\n      });\r\n      imageSetToZero();\r\n    }\r\n  }, [imagesLoaded]);\r\n\r\n  const imageSetToZero = () => {\r\n    setSpinner((prev) => !prev);\r\n    setImagesLoaded(0);\r\n  };\r\n\r\n  const search = (page, imagesPerPage) => {\r\n    ApiGetData(searchInput, page, imagesPerPage).then((data) => {\r\n      data.map((item) => setData((prev) => [...prev, item]));\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Searchbar setSearch={(value) => setSearchInput(value)} />\r\n      <ImagesGalleryStyled>\r\n        {data.map((item) => (\r\n          <ImagesGalleryItem\r\n            key={item.id}\r\n            item={item}\r\n            imageOnLoad={() => {\r\n              setImagesLoaded((prev) => prev + 1);\r\n            }}\r\n          />\r\n        ))}\r\n      </ImagesGalleryStyled>\r\n      {data.length !== 0 && data.length % imagesPerPage === 0 ? (\r\n        <Button setPage={() => setPage((prev) => prev + 1)} spinner={spinner} />\r\n      ) : (\r\n        <h2 className=\"notification\">Notification</h2>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;\r\n","import ImageGallery from './imageGallery/ImageGallery';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <ImageGallery />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}